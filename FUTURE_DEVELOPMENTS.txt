The plotter could check to see if both the start datetime and the end datetime are both before or both after the data
collection interval. If this is the case then an exception could be thrown to indicate this.

A way to make the date automatically fit whatever the data ha.

Maybe make date a global variable?
When the data is first opened give an indication of what the date and time range would be.

Maybe stop LIDAR printing all of its information to the command line every time it is defined.

A method to change the start and the end of the GUI_processor which includes a check to make sure they're in the
right order.

be able to change moment and plot again
start making tests

the date shouldn't be able to change? Or if the it does then everything else needs to update?
Really the date probably corresponds to a data file.


Make string type and actual type that can be used elsewhere.

Rewrite the epoch errors so they start with the explanation.

some of the errors might be better in the try else format

make the addition be to the modulo
set a limit using modulo
feed processor into iterator mayber define it within processor probably not.

clear the colorbar as part of the plotter function.

use jupyter to look at lengths

the way the code is ordered it gets rid of the colorbar even while the pop up is up.

make tests using the other sample file